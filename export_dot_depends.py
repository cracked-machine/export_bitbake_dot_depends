import subprocess
import os
import argparse
from typing import Dict, AnyStr
import pathlib


class ExportDependsDot:
    def __init__(self, args: Dict[AnyStr, AnyStr]):

        self._poky_path: pathlib.Path = pathlib.Path(args["poky_dir"]).absolute()
        """The path to the poky install. Passed in by user."""

        self._core_image_dot_name: AnyStr = args["image_name"]
        """Name of the image to generate with bitbake. Passed in by user"""

        self._default_dot_filename: AnyStr = "task-depends.dot"
        """Default name of the task dependency DOT file generated by bitbake."""

        self._default_pn_buildlist_filename: AnyStr = "pn-buildlist"
        """Default name of the package name build list generated by bitbake."""

    def generate_core_dot(self):

        _core_image_command = f"source {self._poky_path}/oe-init-build-env; bitbake {self._core_image_dot_name} -g"
        subprocess.run(_core_image_command, capture_output=True, shell=True)
        os.rename(
            self._default_dot_filename,
            self._core_image_dot_name.replace("'", "")
            + "_"
            + self._default_dot_filename,
        )
        os.rename(
            self._default_pn_buildlist_filename,
            self._core_image_dot_name.replace("'", "")
            + "_"
            + self._default_pn_buildlist_filename,
        )

    def read_pn_depends(pn_depends_file: pathlib.Path):
        pass


def main():
    parser = argparse.ArgumentParser(
        description="Generate DOT files for each task dependency"
    )

    parser.add_argument("--poky-dir", "-p", type=ascii, required=True)
    parser.add_argument("--image-name", "-i", type=ascii, default="core-image-minimal")
    dot_exporter = ExportDependsDot(vars(parser.parse_args()))
    dot_exporter.generate_core_dot()


if __name__ == "__main__":
    main()
